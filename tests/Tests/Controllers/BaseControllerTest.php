<?php
namespace Tests\Controllers;

use Controllers\BaseController;
use Exceptions\NotImplementedException;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-18 at 19:18:20.
 */
class BaseControllerTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * @var BaseController
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new BaseController;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		unset($_SERVER['REQUEST_METHOD']);
	}

	/**
	 * @covers       Controllers\BaseController::index
	 *
	 * @dataProvider indexProvider
	 *
	 * @param $method
	 * @param $expected
	 */
	public function testIndex($method, $expected)
	{
		$_SERVER['REQUEST_METHOD'] = $method;
		$object = $this->getMockBuilder('\Controllers\BaseController')
			->setMethods([strtolower($method)])
			->getMock();
		$object->expects($this->once())
			->method(strtolower($method))
			->willReturn($expected);

		$actual = $object->index();

		$msg = 'BaseController::index() return wrong result!';
		$this->assertSame($expected, $actual, $msg);
	}

	public function indexProvider()
	{
		return [
			['GET', uniqid()],
			['PUT', uniqid()],
			['POST', uniqid()],
			['DELETE', uniqid()]
		];
	}

	/**
	 * @covers       Controllers\BaseController::index
	 *
	 * @dataProvider indexExceptionProvider
	 * @expectedException \Exceptions\NotImplementedException
	 *
	 * @param $method
	 */
	public function testIndexException($method)
	{
		$_SERVER['REQUEST_METHOD'] = $method;
		$this->object->index();
	}

	public function indexExceptionProvider()
	{
		return [
			['HEAD'],
			['ACCESS']
		];
	}

	/**
	 * @covers Controllers\BaseController::post
	 *
	 * @expectedException \Exceptions\NotImplementedException
	 */
	public function testPost()
	{
		$this->object->post();
	}

	/**
	 * @covers Controllers\BaseController::get
	 *
	 * @expectedException \Exceptions\NotImplementedException
	 */
	public function testGet()
	{
		$this->object->get();
	}

	/**
	 * @covers Controllers\BaseController::put
	 *
	 * @expectedException \Exceptions\NotImplementedException
	 */
	public function testPut()
	{
		$this->object->put();
	}

	/**
	 * @covers Controllers\BaseController::delete
	 *
	 * @expectedException \Exceptions\NotImplementedException
	 */
	public function testDelete()
	{
		$this->object->delete();
	}
}
